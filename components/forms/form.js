import Head from 'next/head'
import styles from './form.module.css'
import { useFormik } from 'formik';
import { Fragment, useRef } from 'react'
import Link from 'next/link'
import Image from 'next/image'
// import { object, string, number, date, InferType } from 'yup';

function form() {
    const nmInpEl = useRef(null);
    const phInpEl = useRef(null);
    const emInpEl = useRef(null);
    const addrInpEl = useRef(null);
    const rmrkInpEl = useRef(null);
    const amtInpEl = useRef(null);

    // let userSchema = object({
    //   name: string().required().max(20, "Only 20 name characters can be put."),
    //   phone: number().required(),
    // })
    const formik = useFormik({
        initialValues: {
            name: '',
            phone: '',
            email: '',
            address: '',
            remark: '',
            amtInpEl: ''
        },
        onSubmit: values => {
            alert(JSON.stringify(values, null, 2));
        },
        });
        return (
        <Fragment>
            <Head>
            <title>Payment form</title>
            <meta name="viewport" content="width=device-width, initial-scale=1.0" />
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className={styles.container}>
                <section className={styles.logoSection}>
                    <div className={styles.logoContainer}>
                        <div className={styles.logo}>
                            <Link href='/' alt="Logo">
                                <a> <Image src="/images/site/dinger_logo.svg" width={400} height={300}/> </a>
                            </Link>
                        </div>
                    </div>
                </section>
                <form onSubmit={formik.handleSubmit} className={styles.form}>
                    <div className={styles["form-control"]} >
                        <label htmlFor="customerName" className={styles.label}>Customer Name</label>
                        <input
                        id="customerName"
                        name="customerName"
                        type="text"
                        onChange={formik.handleChange}
                        value={formik.values.name}
                        ref={nmInpEl}
                        required
                        maxLength={20}
                        />
                        {formik.errors.name ? <div>{formik.errors.name}</div> : null}
                    </div>

                    <div className={styles["form-control"]} >
                        <label htmlFor="customerPhone" className={`${styles.label}`}>Customer Phone</label>
                        <input
                        id="customerPhone"
                        name="customerPhone"
                        type="text"
                        onChange={formik.handleChange}
                        value={formik.values.phone}
                        ref={phInpEl}
                        required
                        />
                        {formik.errors.phone ? <div>{formik.errors.phone}</div> : null}
                    </div>

                    <div className={styles["form-control"]} >
                        <label htmlFor="email">Email</label>
                        <input
                        id="email"
                        name="email"
                        type="email"
                        onChange={formik.handleChange}
                        value={formik.values.email}
                        ref={emInpEl}
                        required
                        />
                        {formik.errors.email ? <div>{formik.errors.email}</div> : null}
                    </div>

                    <div className={styles["form-control"]} >
                        <label htmlFor="customerAddress">Customer Address</label>
                        <input
                        id="customerAddress"
                        name="customerAddress"
                        type="text"
                        onChange={formik.handleChange}
                        value={formik.values.address}
                        ref={addrInpEl}
                        minLength={200}
                        />
                        {formik.errors.address ? <div>{formik.errors.address}</div> : null}
                    </div>

                    <div className={styles["form-control"]} >
                        <label htmlFor="description">Description</label>
                        <input
                        id="description"
                        name="description"
                        type="text"
                        onChange={formik.handleChange}
                        value={formik.values.remark}
                        ref={rmrkInpEl}
                        />
                        {formik.errors.remark ? <div>{formik.errors.remark}</div> : null}
                    </div>

                    <div className={styles["form-control"]} >
                        <label htmlFor="amount">Amount</label>
                        <input
                        id="amount"
                        name="amount"
                        type="number"
                        onChange={formik.handleChange}
                        value={formik.values.amount}
                        ref={amtInpEl}
                        required
                        min={200}
                        />
                        {formik.errors.amount ? <div>{formik.errors.amount}</div> : null}
                    </div>

                    <button type="submit">Submit</button>
                </form>
            </div>
        </Fragment>
    )
}

export default form